basePath: /
definitions:
  dto.Actor:
    properties:
      birth_date:
        type: string
      gender:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  dto.Film:
    properties:
      description:
        type: string
      id:
        type: integer
      rating:
        type: number
      release_date:
        type: string
      title:
        type: string
    type: object
  dto.SignInInput:
    properties:
      mail:
        type: string
      password:
        type: string
    required:
    - mail
    - password
    type: object
  dto.SignUpInput:
    properties:
      mail:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - mail
    - name
    - password
    type: object
host: localhost:8000
info:
  contact: {}
  description: API Server for Film Library
  title: Filmoteka API
  version: "1.0"
paths:
  /api/actors:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: List of actors
          schema:
            items:
              items:
                $ref: '#/definitions/dto.Actor'
              type: array
            type: array
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Retrieve all actors
      tags:
      - actors
  /api/actors/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Actor ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Actor deleted successfully
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete an existing actor
      tags:
      - actors
  /api/auth/login:
    post:
      consumes:
      - application/json
      operationId: login
      parameters:
      - description: Sign-in input parameters
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.SignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: log in to account
      tags:
      - auth
  /api/auth/logout:
    delete:
      consumes:
      - application/json
      operationId: logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: log out of account
      tags:
      - auth
  /api/auth/sign-up:
    post:
      consumes:
      - application/json
      operationId: create-account
      parameters:
      - description: Sign-up input user
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.SignUpInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: integer
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: sign up account
      tags:
      - auth
  /api/create_actors:
    post:
      consumes:
      - application/json
      parameters:
      - description: Actor object to be created
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.Actor'
      produces:
      - application/json
      responses:
        "201":
          description: Actor created successfully
          schema:
            $ref: '#/definitions/dto.Actor'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a new actor
      tags:
      - actors
  /api/create_films:
    post:
      consumes:
      - application/json
      parameters:
      - description: Film object to be created
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.Film'
      produces:
      - application/json
      responses:
        "201":
          description: Film created successfully
          schema:
            $ref: '#/definitions/dto.Film'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a new film
      tags:
      - films
  /api/films:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: List of films
          schema:
            items:
              items:
                $ref: '#/definitions/dto.Film'
              type: array
            type: array
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Retrieve all films
      tags:
      - films
  /api/films/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Film ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Film deleted successfully
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete an existing film
      tags:
      - films
  /api/update_actors:
    put:
      consumes:
      - application/json
      parameters:
      - description: Actor ID
        in: path
        name: id
        required: true
        type: integer
      - description: Actor object to be updated
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.Actor'
      produces:
      - application/json
      responses:
        "200":
          description: Actor updated successfully
          schema:
            $ref: '#/definitions/dto.Actor'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update an existing actor
      tags:
      - actors
  /api/update_films:
    put:
      consumes:
      - application/json
      parameters:
      - description: Film ID
        in: path
        name: id
        required: true
        type: integer
      - description: Film object to be updated
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.Film'
      produces:
      - application/json
      responses:
        "200":
          description: Film updated successfully
          schema:
            $ref: '#/definitions/dto.Film'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update an existing film
      tags:
      - films
swagger: "2.0"
